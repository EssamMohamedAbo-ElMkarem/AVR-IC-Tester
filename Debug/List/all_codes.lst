
AVRASM ver. 2.1.30  C:\cvavreval\BIN\All_codes\Debug\List\all_codes.asm Sun Jan 09 18:02:14 2022

                 
                 
                 ;CodeVisionAVR C Compiler V3.46a Evaluation
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0075 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x1ED:
000033 0131
000034 00a2
000035 0112
000036 00d3      	.DB  LOW(_IC_4000),HIGH(_IC_4000),LOW(_IC_74914),HIGH(_IC_74914),LOW(_IC_74832),HIGH(_IC_74832),LOW(_IC_4001),HIGH(_IC_4001)
000037 018c
000038 01b4
000039 0260
00003a 0265      	.DB  LOW(_IC_74804),HIGH(_IC_74804),LOW(_IC_74874),HIGH(_IC_74874),LOW(_0x1EC),HIGH(_0x1EC),LOW(_0x1EC+5),HIGH(_0x1EC+5)
00003b 026b
00003c 0271
00003d 0276
00003e 027c      	.DB  LOW(_0x1EC+11),HIGH(_0x1EC+11),LOW(_0x1EC+17),HIGH(_0x1EC+17),LOW(_0x1EC+22),HIGH(_0x1EC+22),LOW(_0x1EC+28),HIGH(_0x1EC+28)
                 _0x0:
00003f 3034
000040 3030
000041 3700
000042 3934      	.DB  0x34,0x30,0x30,0x30,0x0,0x37,0x34,0x39
000043 3431
000044 3700
000045 3834
000046 3233      	.DB  0x31,0x34,0x0,0x37,0x34,0x38,0x33,0x32
000047 3400
000048 3030
000049 0031
00004a 3437      	.DB  0x0,0x34,0x30,0x30,0x31,0x0,0x37,0x34
00004b 3038
00004c 0034
00004d 3437
00004e 3738      	.DB  0x38,0x30,0x34,0x0,0x37,0x34,0x38,0x37
00004f 0034
000050 4349
000051 2520
000052 2073      	.DB  0x34,0x0,0x49,0x43,0x20,0x25,0x73,0x20
000053 6168
000054 2073
000055 6562
000056 6e65      	.DB  0x68,0x61,0x73,0x20,0x62,0x65,0x65,0x6E
000057 7220
000058 6365
000059 676f
00005a 696e      	.DB  0x20,0x72,0x65,0x63,0x6F,0x67,0x6E,0x69
00005b 657a
00005c 0d64
00005d 000a
00005e 4f4e      	.DB  0x7A,0x65,0x64,0xD,0xA,0x0,0x4E,0x4F
00005f 4920
000060 0d43
000061 000a      	.DB  0x20,0x49,0x43,0xD,0xA,0x0
                 
                 __GLOBAL_INI_TBL:
000062 0005      	.DW  0x05
000063 0260      	.DW  _0x1EC
000064 007e      	.DW  _0x0*2
                 
000065 0006      	.DW  0x06
000066 0265      	.DW  _0x1EC+5
000067 0083      	.DW  _0x0*2+5
                 
000068 0006      	.DW  0x06
000069 026b      	.DW  _0x1EC+11
00006a 0089      	.DW  _0x0*2+11
                 
00006b 0005      	.DW  0x05
00006c 0271      	.DW  _0x1EC+17
00006d 008f      	.DW  _0x0*2+17
                 
00006e 0006      	.DW  0x06
00006f 0276      	.DW  _0x1EC+22
000070 0094      	.DW  _0x0*2+22
                 
000071 0006      	.DW  0x06
000072 027c      	.DW  _0x1EC+28
000073 009a      	.DW  _0x0*2+28
                 
                 _0xFFFFFFFF:
000074 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000075 94f8      	CLI
000076 27ee      	CLR  R30
000077 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000078 e0f1      	LDI  R31,1
000079 bffb      	OUT  GICR,R31
00007a bfeb      	OUT  GICR,R30
00007b bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00007c e08d      	LDI  R24,(14-2)+1
00007d e0a2      	LDI  R26,2
00007e 27bb      	CLR  R27
                 __CLEAR_REG:
00007f 93ed      	ST   X+,R30
000080 958a      	DEC  R24
000081 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000082 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000083 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000084 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000085 93ed      	ST   X+,R30
000086 9701      	SBIW R24,1
000087 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000088 ece4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000089 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00008a 9185      	LPM  R24,Z+
00008b 9195      	LPM  R25,Z+
00008c 9700      	SBIW R24,0
00008d f061      	BREQ __GLOBAL_INI_END
00008e 91a5      	LPM  R26,Z+
00008f 91b5      	LPM  R27,Z+
000090 9005      	LPM  R0,Z+
000091 9015      	LPM  R1,Z+
000092 01bf      	MOVW R22,R30
000093 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000094 9005      	LPM  R0,Z+
000095 920d      	ST   X+,R0
000096 9701      	SBIW R24,1
000097 f7e1      	BRNE __GLOBAL_INI_LOOP
000098 01fb      	MOVW R30,R22
000099 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00009a e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00009b bfed      	OUT  SPL,R30
00009c e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00009d bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00009e e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00009f e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000a0 940c 0208 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;int IC_74914(void){
                 ; 0000 0007 int IC_74914(void){
                 
                 	.CSEG
                 _IC_74914:
                 ; .FSTART _IC_74914
                 ; 0000 0008 DDRA= 0xBF;
0000a2 ebef      	LDI  R30,LOW(191)
0000a3 bbea      	OUT  0x1A,R30
                 ; 0000 0009 DDRB= 0xF5;
0000a4 efe5      	LDI  R30,LOW(245)
0000a5 bbe7      	OUT  0x17,R30
                 ; 0000 000A DDRC= 0x7F;    // 0111 1111
0000a6 e7ef      	LDI  R30,LOW(127)
0000a7 bbe4      	OUT  0x14,R30
                 ; 0000 000B DDRD= 0xAF;
0000a8 eaef      	LDI  R30,LOW(175)
0000a9 bbe1      	OUT  0x11,R30
                 ; 0000 000C CLR_BIT(DDRD,3);
0000aa 988b      	CBI  0x11,3
                 ; 0000 000D 
                 ; 0000 000E delay_ms(100);
0000ab e6a4      	LDI  R26,LOW(100)
0000ac e0b0      	LDI  R27,0
0000ad d45c      	RCALL _delay_ms
                 ; 0000 000F 
                 ; 0000 0010 PORTD.7=0;  //GND
0000ae 9897      	CBI  0x12,7
                 ; 0000 0011 PORTC.5=1;  //VCC
0000af 9aad      	SBI  0x15,5
                 ; 0000 0012 
                 ; 0000 0013 
                 ; 0000 0014 PORTA.5 = PORTA.7 = PORTD.5 = PORTC.6 = PORTB.0 = PORTB.2 = 0;
0000b0 98c2      	CBI  0x18,2
0000b1 98c0      	CBI  0x18,0
0000b2 98ae      	CBI  0x15,6
0000b3 9895      	CBI  0x12,5
0000b4 98df      	CBI  0x1B,7
0000b5 98dd      	CBI  0x1B,5
                 ; 0000 0015 delay_ms(10);
0000b6 d314      	RCALL SUBOPT_0x0
                 ; 0000 0016 if(PINA.6 & PIND.4 & PIND.6 & PINB.1 & PINB.3 & PINC.7 == 0) return (0);
0000b7 d31d      	RCALL SUBOPT_0x1
0000b8 d324      	RCALL SUBOPT_0x2
0000b9 d328      	RCALL SUBOPT_0x3
0000ba 23ea      	AND  R30,R26
0000bb d32b      	RCALL SUBOPT_0x4
0000bc d330      	RCALL SUBOPT_0x5
0000bd f009      	BREQ _0x13
0000be c143      	RJMP _0x2060002
                 ; 0000 0017 
                 ; 0000 0018 PORTA.5 = PORTA.7 = PORTD.5 = PORTC.6 = PORTB.0 = PORTB.2 = 1;
                 _0x13:
0000bf 9ac2      	SBI  0x18,2
0000c0 9ac0      	SBI  0x18,0
0000c1 9aae      	SBI  0x15,6
0000c2 9a95      	SBI  0x12,5
0000c3 9adf      	SBI  0x1B,7
0000c4 9add      	SBI  0x1B,5
                 ; 0000 0019 delay_ms(10);
0000c5 d305      	RCALL SUBOPT_0x0
                 ; 0000 001A 
                 ; 0000 001B if(PINA.6 | PIND.4 | PIND.6 | PINB.1 | PINB.3 | PINC.7 !=0 ) return (0);
0000c6 d32c      	RCALL SUBOPT_0x6
0000c7 d332      	RCALL SUBOPT_0x7
0000c8 d319      	RCALL SUBOPT_0x3
0000c9 2bea      	OR   R30,R26
0000ca d31c      	RCALL SUBOPT_0x4
0000cb d334      	RCALL SUBOPT_0x8
0000cc 29e0      	OR   R30,R0
0000cd f009      	BREQ _0x20
0000ce c133      	RJMP _0x2060002
                 ; 0000 001C delay_ms(10);
                 _0x20:
0000cf e0aa      	LDI  R26,LOW(10)
0000d0 e0b0      	LDI  R27,0
0000d1 d438      	RCALL _delay_ms
                 ; 0000 001D 
                 ; 0000 001E return(1);
0000d2 c132      	RJMP _0x2060001
                 ; 0000 001F }
                 ; .FEND
                 ;int IC_4001(void){
                 ; 0000 0021 int IC_4001(void){
                 _IC_4001:
                 ; .FSTART _IC_4001
                 ; 0000 0022 DDRA=0x7F;
0000d3 e7ef      	LDI  R30,LOW(127)
0000d4 bbea      	OUT  0x1A,R30
                 ; 0000 0023 DDRB=0xFC;//11111001
0000d5 efec      	LDI  R30,LOW(252)
0000d6 bbe7      	OUT  0x17,R30
                 ; 0000 0024 DDRC=0xFF;
0000d7 efef      	LDI  R30,LOW(255)
0000d8 bbe4      	OUT  0x14,R30
                 ; 0000 0025 DDRD=0xEF;
0000d9 eeef      	LDI  R30,LOW(239)
0000da d32a      	RCALL SUBOPT_0x9
                 ; 0000 0026 CLR_BIT(DDRD,3);
                 ; 0000 0027 
                 ; 0000 0028 
                 ; 0000 0029 PORTC.5=1;   //VCC
                 ; 0000 002A PORTD.7=0;   //GND
                 ; 0000 002B 
                 ; 0000 002C //00
                 ; 0000 002D PORTA.5=0; PORTA.6=0;
0000db 98dd      	CBI  0x1B,5
0000dc 98de      	CBI  0x1B,6
                 ; 0000 002E PORTD.5=0; PORTD.6=0;
0000dd 9895      	CBI  0x12,5
0000de 9896      	CBI  0x12,6
                 ; 0000 002F PORTB.2=0; PORTB.3=0;
0000df 98c2      	CBI  0x18,2
0000e0 98c3      	CBI  0x18,3
                 ; 0000 0030 PORTC.6=0; PORTC.7=0;
0000e1 98ae      	CBI  0x15,6
0000e2 d327      	RCALL SUBOPT_0xA
                 ; 0000 0031 if(PINA.7& PIND.4& PINB.1 & PINB.0== 0) return (0);
0000e3 23ea      	AND  R30,R26
0000e4 2fae      	MOV  R26,R30
0000e5 d2f7      	RCALL SUBOPT_0x2
0000e6 d32b      	RCALL SUBOPT_0xB
0000e7 e0e0      	LDI  R30,LOW(0)
0000e8 d304      	RCALL SUBOPT_0x5
0000e9 f009      	BREQ _0x35
0000ea c117      	RJMP _0x2060002
                 ; 0000 0032 
                 ; 0000 0033 //01
                 ; 0000 0034 PORTA.5=0; PORTA.6=1;
                 _0x35:
0000eb 98dd      	CBI  0x1B,5
0000ec 9ade      	SBI  0x1B,6
                 ; 0000 0035 PORTD.5=0; PORTD.6=1;
0000ed 9895      	CBI  0x12,5
0000ee 9a96      	SBI  0x12,6
                 ; 0000 0036 PORTB.2=0; PORTB.3=1;
0000ef 98c2      	CBI  0x18,2
0000f0 9ac3      	SBI  0x18,3
                 ; 0000 0037 PORTC.6=0; PORTC.7=1;
0000f1 98ae      	CBI  0x15,6
0000f2 d324      	RCALL SUBOPT_0xC
                 ; 0000 0038 if(PINA.7| PIND.4| PINB.1 | PINB.0 == 1) return (0);
0000f3 d31e      	RCALL SUBOPT_0xB
0000f4 d32b      	RCALL SUBOPT_0xD
0000f5 f009      	BREQ _0x46
0000f6 c10b      	RJMP _0x2060002
                 ; 0000 0039 
                 ; 0000 003A //10
                 ; 0000 003B PORTA.5=1; PORTA.6=0;
                 _0x46:
0000f7 9add      	SBI  0x1B,5
0000f8 98de      	CBI  0x1B,6
                 ; 0000 003C PORTD.5=1; PORTD.6=0;
0000f9 9a95      	SBI  0x12,5
0000fa 9896      	CBI  0x12,6
                 ; 0000 003D PORTB.2=1; PORTB.3=0;
0000fb 9ac2      	SBI  0x18,2
0000fc 98c3      	CBI  0x18,3
                 ; 0000 003E PORTC.6=1; PORTC.7=0;
0000fd 9aae      	SBI  0x15,6
0000fe d30b      	RCALL SUBOPT_0xA
                 ; 0000 003F if(PINA.7| PIND.4| PINB.1 | PINB.0 == 1) return (0);
0000ff 2bea      	OR   R30,R26
000100 d2f9      	RCALL SUBOPT_0x7
000101 d310      	RCALL SUBOPT_0xB
000102 d31d      	RCALL SUBOPT_0xD
000103 f009      	BREQ _0x57
000104 c0fd      	RJMP _0x2060002
                 ; 0000 0040 
                 ; 0000 0041 //11
                 ; 0000 0042 PORTA.5=1; PORTA.6=1;
                 _0x57:
000105 9add      	SBI  0x1B,5
000106 9ade      	SBI  0x1B,6
                 ; 0000 0043 PORTD.5=1; PORTD.6=1;
000107 9a95      	SBI  0x12,5
000108 9a96      	SBI  0x12,6
                 ; 0000 0044 PORTB.2=1; PORTB.3=1;
000109 9ac2      	SBI  0x18,2
00010a 9ac3      	SBI  0x18,3
                 ; 0000 0045 PORTC.6=1; PORTC.7=1;
00010b 9aae      	SBI  0x15,6
00010c d30a      	RCALL SUBOPT_0xC
                 ; 0000 0046 if(PINA.7| PIND.4| PINB.1 | PINB.0 == 1) return (0);
00010d d304      	RCALL SUBOPT_0xB
00010e d311      	RCALL SUBOPT_0xD
00010f f009      	BREQ _0x68
000110 c0f1      	RJMP _0x2060002
                 ; 0000 0047 
                 ; 0000 0048 return (1);
                 _0x68:
000111 c0f3      	RJMP _0x2060001
                 ; 0000 0049 }
                 ; .FEND
                 ;int IC_74832(void){
                 ; 0000 004B int IC_74832(void){
                 _IC_74832:
                 ; .FSTART _IC_74832
                 ; 0000 004C DDRA= 0x6f;
000112 d314      	RCALL SUBOPT_0xE
                 ; 0000 004D DDRB= 0xf6;
                 ; 0000 004E DDRC= 0xdf;
                 ; 0000 004F DDRD= 0xbf;
                 ; 0000 0050 delay_ms(100);
000113 e6a4      	LDI  R26,LOW(100)
000114 e0b0      	LDI  R27,0
000115 d3f4      	RCALL _delay_ms
                 ; 0000 0051 
                 ; 0000 0052 CLR_BIT(DDRD,3);
000116 988b      	CBI  0x11,3
                 ; 0000 0053 
                 ; 0000 0054 PORTD.7=0;  //GND
000117 9897      	CBI  0x12,7
                 ; 0000 0055 PORTC.2=1;  //VCC
000118 9aaa      	SBI  0x15,2
                 ; 0000 0056 
                 ; 0000 0057 
                 ; 0000 0058 
                 ; 0000 0059 
                 ; 0000 005A 
                 ; 0000 005B PORTA.2 = PORTA.5 = PORTD.4 = PORTB.1 = PORTC.6 = PORTC.3 = 1;
000119 d316      	RCALL SUBOPT_0xF
                 ; 0000 005C PORTA.3 = PORTA.6 = PORTD.5 = PORTB.2 = PORTC.7 = PORTC.4 = 1;
00011a d31c      	RCALL SUBOPT_0x10
                 ; 0000 005D if(PINA.4 & PINA.7 & PIND.6 & PINB.3 & PINB.0 & PINC.5 !=1) return (0);
00011b d328      	RCALL SUBOPT_0x11
00011c f009      	BREQ _0x85
00011d c0e4      	RJMP _0x2060002
                 ; 0000 005E 
                 ; 0000 005F PORTA.2 = PORTA.5 = PORTD.4 = PORTB.1 = PORTC.6 = PORTC.3 = 0;
                 _0x85:
00011e d336      	RCALL SUBOPT_0x12
                 ; 0000 0060 PORTA.3 = PORTA.6 = PORTD.5 = PORTB.2 = PORTC.7 = PORTC.4 = 0;
00011f d33c      	RCALL SUBOPT_0x13
                 ; 0000 0061 
                 ; 0000 0062 if(PINA.4 | PINA.7 | PIND.6 | PINB.3 | PINB.0 | PINC.5 ==1) return (0);
000120 d2d2      	RCALL SUBOPT_0x6
000121 d2c0      	RCALL SUBOPT_0x3
000122 d346      	RCALL SUBOPT_0x14
000123 f009      	BREQ _0x9E
000124 c0dd      	RJMP _0x2060002
                 ; 0000 0063 
                 ; 0000 0064 PORTA.2 = PORTA.5 = PORTD.4 = PORTB.1 = PORTC.6 = PORTC.3 = 1;
                 _0x9E:
000125 d30a      	RCALL SUBOPT_0xF
                 ; 0000 0065 PORTA.3 = PORTA.6 = PORTD.5 = PORTB.2 = PORTC.7 = PORTC.4 = 0;
000126 d335      	RCALL SUBOPT_0x13
                 ; 0000 0066 if(PINA.4 & PINA.7 & PIND.6 & PINB.3 & PINB.0 & PINC.5 !=1) return (0);
000127 d2ad      	RCALL SUBOPT_0x1
000128 d31b      	RCALL SUBOPT_0x11
000129 f009      	BREQ _0xB7
00012a c0d7      	RJMP _0x2060002
                 ; 0000 0067 
                 ; 0000 0068 
                 ; 0000 0069 PORTA.2 = PORTA.5 = PORTD.4 = PORTB.1 = PORTC.6 = PORTC.3 = 0;
                 _0xB7:
00012b d329      	RCALL SUBOPT_0x12
                 ; 0000 006A PORTA.3 = PORTA.6 = PORTD.5 = PORTB.2 = PORTC.7 = PORTC.4 = 1;
00012c d30a      	RCALL SUBOPT_0x10
                 ; 0000 006B if(PINA.4 & PINA.7 & PIND.6 & PINB.3 & PINB.0 & PINC.5 !=1) return (0);
00012d d316      	RCALL SUBOPT_0x11
00012e f009      	BREQ _0xD0
00012f c0d2      	RJMP _0x2060002
                 ; 0000 006C 
                 ; 0000 006D return(1);
                 _0xD0:
000130 c0d4      	RJMP _0x2060001
                 ; 0000 006E 
                 ; 0000 006F }
                 ; .FEND
                 ;int IC_4000(void){
                 ; 0000 0071 int IC_4000(void){
                 _IC_4000:
                 ; .FSTART _IC_4000
                 ; 0000 0072 DDRA=0xFF;       //input->0  output->1
000131 efef      	LDI  R30,LOW(255)
000132 bbea      	OUT  0x1A,R30
                 ; 0000 0073 DDRB=0xF9;//11111001
000133 efe9      	LDI  R30,LOW(249)
000134 bbe7      	OUT  0x17,R30
                 ; 0000 0074 DDRC=0xFF;
000135 efef      	LDI  R30,LOW(255)
000136 bbe4      	OUT  0x14,R30
                 ; 0000 0075 DDRD=0xBF;
000137 ebef      	LDI  R30,LOW(191)
000138 d2cc      	RCALL SUBOPT_0x9
                 ; 0000 0076 
                 ; 0000 0077 CLR_BIT(DDRD,3);
                 ; 0000 0078 
                 ; 0000 0079 
                 ; 0000 007A PORTC.5=1;   //VCC
                 ; 0000 007B PORTD.7=0;   //GND
                 ; 0000 007C 
                 ; 0000 007D //000
                 ; 0000 007E PORTA.7=0; PORTD.4=0; PORTD.5=0;
000139 98df      	CBI  0x1B,7
00013a 9894      	CBI  0x12,4
00013b 9895      	CBI  0x12,5
                 ; 0000 007F PORTC.6=0; PORTC.7=0; PORTB.0=0;
00013c 98ae      	CBI  0x15,6
00013d 98af      	CBI  0x15,7
00013e 98c0      	CBI  0x18,0
                 ; 0000 0080 PORTB.3=0;
00013f 98c3      	CBI  0x18,3
                 ; 0000 0081 
                 ; 0000 0082 if(PIND.6 & PINB.1 & PINB.2 == 0) return (0);
000140 e0a0      	LDI  R26,0
000141 9986      	SBIC 0x10,6
000142 e0a1      	LDI  R26,1
000143 d299      	RCALL SUBOPT_0x2
000144 d32f      	RCALL SUBOPT_0x15
000145 e0e0      	LDI  R30,LOW(0)
000146 d2a6      	RCALL SUBOPT_0x5
000147 f009      	BREQ _0xE3
000148 c0b9      	RJMP _0x2060002
                 ; 0000 0083 //001
                 ; 0000 0084 PORTA.7=0; PORTD.4=0; PORTD.5=1;
                 _0xE3:
000149 98df      	CBI  0x1B,7
00014a 9894      	CBI  0x12,4
00014b 9a95      	SBI  0x12,5
                 ; 0000 0085 PORTC.6=0; PORTC.7=0; PORTB.0=1;     PORTB.3=1;
00014c 98ae      	CBI  0x15,6
00014d d32b      	RCALL SUBOPT_0x16
                 ; 0000 0086 
                 ; 0000 0087 if(PIND.6 | PINB.1 |PINB.2 ==1) return (0);
00014e d2d1      	RCALL SUBOPT_0xD
00014f f009      	BREQ _0xF2
000150 c0b1      	RJMP _0x2060002
                 ; 0000 0088 //010
                 ; 0000 0089 PORTA.7=0; PORTD.4=1; PORTD.5=0;
                 _0xF2:
000151 98df      	CBI  0x1B,7
000152 9a94      	SBI  0x12,4
000153 9895      	CBI  0x12,5
                 ; 0000 008A PORTC.6=0; PORTC.7=1; PORTB.0=0;      PORTB.3=1;
000154 98ae      	CBI  0x15,6
000155 d32e      	RCALL SUBOPT_0x17
                 ; 0000 008B 
                 ; 0000 008C if(PIND.6 | PINB.1 |PINB.2 ==1) return (0);
000156 d2c9      	RCALL SUBOPT_0xD
000157 f009      	BREQ _0x101
000158 c0a9      	RJMP _0x2060002
                 ; 0000 008D //011
                 ; 0000 008E PORTA.7=0; PORTD.4=1; PORTD.5=1;
                 _0x101:
000159 98df      	CBI  0x1B,7
00015a 9a94      	SBI  0x12,4
00015b 9a95      	SBI  0x12,5
                 ; 0000 008F PORTC.6=0; PORTC.7=1; PORTB.0=1;     PORTB.3=1;
00015c 98ae      	CBI  0x15,6
00015d d331      	RCALL SUBOPT_0x18
                 ; 0000 0090 
                 ; 0000 0091 if(PIND.6 | PINB.1 | PINB.2 ==1) return (0);
00015e d2c1      	RCALL SUBOPT_0xD
00015f f009      	BREQ _0x110
000160 c0a1      	RJMP _0x2060002
                 ; 0000 0092 //100
                 ; 0000 0093 PORTA.7=1; PORTD.4=0; PORTD.5=0;
                 _0x110:
000161 9adf      	SBI  0x1B,7
000162 9894      	CBI  0x12,4
000163 9895      	CBI  0x12,5
                 ; 0000 0094 PORTC.6=1; PORTC.7=0; PORTB.0=0;     PORTB.3=1;
000164 9aae      	SBI  0x15,6
000165 98af      	CBI  0x15,7
000166 98c0      	CBI  0x18,0
000167 9ac3      	SBI  0x18,3
                 ; 0000 0095 
                 ; 0000 0096 if(PIND.6 | PINB.1 | PINB.2 ==1) return (0);
000168 e0a0      	LDI  R26,0
000169 9986      	SBIC 0x10,6
00016a e0a1      	LDI  R26,1
00016b e0e0      	LDI  R30,0
00016c 99b1      	SBIC 0x16,1
00016d e0e1      	LDI  R30,1
00016e 2bea      	OR   R30,R26
00016f d304      	RCALL SUBOPT_0x15
000170 d2af      	RCALL SUBOPT_0xD
000171 f009      	BREQ _0x11F
000172 c08f      	RJMP _0x2060002
                 ; 0000 0097 //101
                 ; 0000 0098 PORTA.7=1; PORTD.4=0; PORTD.5=1;
                 _0x11F:
000173 9adf      	SBI  0x1B,7
000174 9894      	CBI  0x12,4
000175 9a95      	SBI  0x12,5
                 ; 0000 0099 PORTC.6=1; PORTC.7=0; PORTB.0=1;     PORTB.3=1;
000176 9aae      	SBI  0x15,6
000177 d301      	RCALL SUBOPT_0x16
                 ; 0000 009A 
                 ; 0000 009B if(PIND.6 | PINB.1 | PINB.2 ==1) return (0);
000178 d2a7      	RCALL SUBOPT_0xD
000179 f009      	BREQ _0x12E
00017a c087      	RJMP _0x2060002
                 ; 0000 009C //110
                 ; 0000 009D PORTA.7=1; PORTD.4=1; PORTD.5=0;
                 _0x12E:
00017b 9adf      	SBI  0x1B,7
00017c 9a94      	SBI  0x12,4
00017d 9895      	CBI  0x12,5
                 ; 0000 009E PORTC.6=1; PORTC.7=1; PORTB.0=0;      PORTB.3=1;
00017e 9aae      	SBI  0x15,6
00017f d304      	RCALL SUBOPT_0x17
                 ; 0000 009F 
                 ; 0000 00A0 if(PIND.6 | PINB.1 | PINB.2 ==1) return (0);
000180 d29f      	RCALL SUBOPT_0xD
000181 f009      	BREQ _0x13D
000182 c07f      	RJMP _0x2060002
                 ; 0000 00A1 //111
                 ; 0000 00A2 PORTA.7=1; PORTD.4=1; PORTD.5=1;
                 _0x13D:
000183 9adf      	SBI  0x1B,7
000184 9a94      	SBI  0x12,4
000185 9a95      	SBI  0x12,5
                 ; 0000 00A3 PORTC.6=1; PORTC.7=1; PORTB.0=1;      PORTB.3=1;
000186 9aae      	SBI  0x15,6
000187 d307      	RCALL SUBOPT_0x18
                 ; 0000 00A4 
                 ; 0000 00A5 if(PIND.6 | PINB.1 | PINB.2 ==1) return (0);
000188 d297      	RCALL SUBOPT_0xD
000189 f009      	BREQ _0x14C
00018a c077      	RJMP _0x2060002
                 ; 0000 00A6 
                 ; 0000 00A7 //NOT GATE
                 ; 0000 00A8 //0
                 ; 0000 00A9 /* PORTB.3=0;
                 ; 0000 00AA if (PINB.2 == 0) return (0);
                 ; 0000 00AB //1        */
                 ; 0000 00AC /*  PORTB.3=1;
                 ; 0000 00AD if (PINB.2 == 1) return (0);*/
                 ; 0000 00AE 
                 ; 0000 00AF return (1);
                 _0x14C:
00018b c079      	RJMP _0x2060001
                 ; 0000 00B0 }
                 ; .FEND
                 ;int IC_74804(void){
                 ; 0000 00B2 int IC_74804(void){
                 _IC_74804:
                 ; .FSTART _IC_74804
                 ; 0000 00B3 
                 ; 0000 00B4 DDRA= 0x6f;
00018c d29a      	RCALL SUBOPT_0xE
                 ; 0000 00B5 DDRB= 0xf6;
                 ; 0000 00B6 DDRC= 0xdf;
                 ; 0000 00B7 DDRD= 0xbf;
                 ; 0000 00B8 CLR_BIT(DDRD,3);
00018d 988b      	CBI  0x11,3
                 ; 0000 00B9 
                 ; 0000 00BA PORTD.7=0;  //GND
00018e 9897      	CBI  0x12,7
                 ; 0000 00BB PORTC.2=1;  //VCC
00018f 9aaa      	SBI  0x15,2
                 ; 0000 00BC 
                 ; 0000 00BD 
                 ; 0000 00BE PORTA.2 = PORTA.5 = PORTD.4 = PORTB.1 = PORTC.6 = PORTC.3 = 0;
000190 d2c4      	RCALL SUBOPT_0x12
                 ; 0000 00BF PORTA.3 = PORTA.6 = PORTD.5 = PORTB.2 = PORTC.7 = PORTC.4 = 0;
000191 d2ca      	RCALL SUBOPT_0x13
                 ; 0000 00C0 if(PINA.4 & PINA.7 & PIND.6 & PINB.3 & PINB.0 & PINC.5 !=1) return (0);
000192 d242      	RCALL SUBOPT_0x1
000193 d2b0      	RCALL SUBOPT_0x11
000194 f009      	BREQ _0x169
000195 c06c      	RJMP _0x2060002
                 ; 0000 00C1 
                 ; 0000 00C2 
                 ; 0000 00C3 PORTA.2 = PORTA.5 = PORTD.4 = PORTB.1 = PORTC.6 = PORTC.3 = 1;
                 _0x169:
000196 d299      	RCALL SUBOPT_0xF
                 ; 0000 00C4 PORTA.3 = PORTA.6 = PORTD.5 = PORTB.2 = PORTC.7 = PORTC.4 = 0;
000197 d2c4      	RCALL SUBOPT_0x13
                 ; 0000 00C5 if(PINA.4 & PINA.7 & PIND.6 & PINB.3 & PINB.0 & PINC.5 !=1) return (0);
000198 d23c      	RCALL SUBOPT_0x1
000199 d2aa      	RCALL SUBOPT_0x11
00019a f009      	BREQ _0x182
00019b c066      	RJMP _0x2060002
                 ; 0000 00C6 
                 ; 0000 00C7 
                 ; 0000 00C8 PORTA.2 = PORTA.5 = PORTD.4 = PORTB.1 = PORTC.6 = PORTC.3 = 0;
                 _0x182:
00019c d2b8      	RCALL SUBOPT_0x12
                 ; 0000 00C9 PORTA.3 = PORTA.6 = PORTD.5 = PORTB.2 = PORTC.7 = PORTC.4 = 1;
00019d d299      	RCALL SUBOPT_0x10
                 ; 0000 00CA if(PINA.4 & PINA.7 & PIND.6 & PINB.3 & PINB.0 & PINC.5 !=1) return (0);
00019e d2a5      	RCALL SUBOPT_0x11
00019f f009      	BREQ _0x19B
0001a0 c061      	RJMP _0x2060002
                 ; 0000 00CB 
                 ; 0000 00CC 
                 ; 0000 00CD PORTA.2 = PORTA.5 = PORTD.4 = PORTB.1 = PORTC.6 = PORTC.3 = 1;
                 _0x19B:
0001a1 d28e      	RCALL SUBOPT_0xF
                 ; 0000 00CE PORTA.3 = PORTA.6 = PORTD.5 = PORTB.2 = PORTC.7 = PORTC.4 = 1;
0001a2 9aac      	SBI  0x15,4
0001a3 9aaf      	SBI  0x15,7
0001a4 9ac2      	SBI  0x18,2
0001a5 9a95      	SBI  0x12,5
0001a6 9ade      	SBI  0x1B,6
0001a7 9adb      	SBI  0x1B,3
                 ; 0000 00CF if(PINA.4 | PINA.7 | PIND.6 | PINB.3 | PINB.0 | PINC.5 ==1) return (0);
0001a8 e0a0      	LDI  R26,0
0001a9 99cc      	SBIC 0x19,4
0001aa e0a1      	LDI  R26,1
0001ab e0e0      	LDI  R30,0
0001ac 99cf      	SBIC 0x19,7
0001ad e0e1      	LDI  R30,1
0001ae d244      	RCALL SUBOPT_0x6
0001af d232      	RCALL SUBOPT_0x3
0001b0 d2b8      	RCALL SUBOPT_0x14
0001b1 f009      	BREQ _0x1B4
0001b2 c04f      	RJMP _0x2060002
                 ; 0000 00D0 
                 ; 0000 00D1 return(1);
                 _0x1B4:
0001b3 c051      	RJMP _0x2060001
                 ; 0000 00D2 }
                 ; .FEND
                 ;int IC_74874(void){
                 ; 0000 00D4 int IC_74874(void){
                 _IC_74874:
                 ; .FSTART _IC_74874
                 ; 0000 00D5 DDRA= 0xff;
0001b4 efef      	LDI  R30,LOW(255)
0001b5 bbea      	OUT  0x1A,R30
                 ; 0000 00D6 DDRB= 0xfc;
0001b6 efec      	LDI  R30,LOW(252)
0001b7 bbe7      	OUT  0x17,R30
                 ; 0000 00D7 DDRC= 0x03;
0001b8 e0e3      	LDI  R30,LOW(3)
0001b9 bbe4      	OUT  0x14,R30
                 ; 0000 00D8 DDRD= 0xff;
0001ba efef      	LDI  R30,LOW(255)
0001bb bbe1      	OUT  0x11,R30
                 ; 0000 00D9 CLR_BIT(DDRD,3);
0001bc 988b      	CBI  0x11,3
                 ; 0000 00DA 
                 ; 0000 00DB PORTD.7=0;  //GND
0001bd 9897      	CBI  0x12,7
                 ; 0000 00DC PORTC.0=1;  //VCC
0001be 9aa8      	SBI  0x15,0
                 ; 0000 00DD PORTA.1=0;  //EN1
0001bf 98d9      	CBI  0x1B,1
                 ; 0000 00DE PORTD.6=0;  //EN2
0001c0 9896      	CBI  0x12,6
                 ; 0000 00DF PORTC.1=1; //CLK
0001c1 9aa9      	SBI  0x15,1
                 ; 0000 00E0 PORTB.2=1; //CLK
0001c2 9ac2      	SBI  0x18,2
                 ; 0000 00E1 PORTA.0=0; PORTB.3=0;
0001c3 98d8      	CBI  0x1B,0
0001c4 98c3      	CBI  0x18,3
                 ; 0000 00E2 if(PINC.2 | PINC.3 |PINC.4 | PINC.5 | PINC.6 | PINC.7| PINB.0 | PINB.1 ==1 ) return (0);
0001c5 d2d4      	RCALL SUBOPT_0x19
0001c6 f5d9      	BRNE _0x2060002
                 ; 0000 00E3 
                 ; 0000 00E4 PORTA.0=1; PORTB.3=1;
0001c7 9ad8      	SBI  0x1B,0
0001c8 9ac3      	SBI  0x18,3
                 ; 0000 00E5 PORTA.2=0; PORTA.3=0 ; PORTA.4=0; PORTA.5=0; PORTA.6=0; PORTA.7=0; PORTD.4=0; PORTD.5=0;
0001c9 98da      	CBI  0x1B,2
0001ca 98db      	CBI  0x1B,3
0001cb 98dc      	CBI  0x1B,4
0001cc 98dd      	CBI  0x1B,5
0001cd 98de      	CBI  0x1B,6
0001ce 98df      	CBI  0x1B,7
0001cf 9894      	CBI  0x12,4
0001d0 9895      	CBI  0x12,5
                 ; 0000 00E6 if(PINC.2 | PINC.3 |PINC.4 | PINC.5 | PINC.6 | PINC.7| PINB.0 | PINB.1 ==1 ) return (0);
0001d1 d2c8      	RCALL SUBOPT_0x19
0001d2 f579      	BRNE _0x2060002
                 ; 0000 00E7 
                 ; 0000 00E8 PORTA.2=1; PORTA.3=1 ; PORTA.4=1; PORTA.5=1; PORTA.6=1; PORTA.7=1; PORTD.4=1; PORTD.5=1;
0001d3 9ada      	SBI  0x1B,2
0001d4 9adb      	SBI  0x1B,3
0001d5 9adc      	SBI  0x1B,4
0001d6 9add      	SBI  0x1B,5
0001d7 9ade      	SBI  0x1B,6
0001d8 9adf      	SBI  0x1B,7
0001d9 9a94      	SBI  0x12,4
0001da 9a95      	SBI  0x12,5
                 ; 0000 00E9 if(PINC.2 & PINC.3 & PINC.4 & PINC.5 & PINC.6 & PINC.7 & PINB.0 & PINB.1 ==0 ) return (0);
0001db e0a0      	LDI  R26,0
0001dc 999a      	SBIC 0x13,2
0001dd e0a1      	LDI  R26,1
0001de e0e0      	LDI  R30,0
0001df 999b      	SBIC 0x13,3
0001e0 e0e1      	LDI  R30,1
0001e1 23ea      	AND  R30,R26
0001e2 2fae      	MOV  R26,R30
0001e3 e0e0      	LDI  R30,0
0001e4 999c      	SBIC 0x13,4
0001e5 e0e1      	LDI  R30,1
0001e6 23ea      	AND  R30,R26
0001e7 2fae      	MOV  R26,R30
0001e8 e0e0      	LDI  R30,0
0001e9 999d      	SBIC 0x13,5
0001ea e0e1      	LDI  R30,1
0001eb 23ea      	AND  R30,R26
0001ec 2fae      	MOV  R26,R30
0001ed e0e0      	LDI  R30,0
0001ee 999e      	SBIC 0x13,6
0001ef e0e1      	LDI  R30,1
0001f0 23ea      	AND  R30,R26
0001f1 2fae      	MOV  R26,R30
0001f2 e0e0      	LDI  R30,0
0001f3 999f      	SBIC 0x13,7
0001f4 e0e1      	LDI  R30,1
0001f5 23ea      	AND  R30,R26
0001f6 2fae      	MOV  R26,R30
0001f7 e0e0      	LDI  R30,0
0001f8 99b0      	SBIC 0x16,0
0001f9 e0e1      	LDI  R30,1
0001fa 23ea      	AND  R30,R26
0001fb 2e0e      	MOV  R0,R30
0001fc e0a0      	LDI  R26,0
0001fd 99b1      	SBIC 0x16,1
0001fe e0a1      	LDI  R26,1
0001ff e0e0      	LDI  R30,LOW(0)
000200 d1ec      	RCALL SUBOPT_0x5
000201 f019      	BREQ _0x1EB
                 _0x2060002:
000202 e0e0      	LDI  R30,LOW(0)
000203 e0f0      	LDI  R31,HIGH(0)
000204 9508      	RET
                 ; 0000 00EA 
                 ; 0000 00EB return(1);
                 _0x1EB:
                 _0x2060001:
000205 e0e1      	LDI  R30,LOW(1)
000206 e0f0      	LDI  R31,HIGH(1)
000207 9508      	RET
                 ; 0000 00EC }
                 ; .FEND
                 ;void main(void)
                 ; 0000 00EE {
                 _main:
                 ; .FSTART _main
                 ; 0000 00EF 
                 ; 0000 00F0 char i=0;
                 ; 0000 00F1 char flag=0;
                 ; 0000 00F2 unsigned char* ICs[6] = {"4000","74914","74832","4001","74804","74874"};
                 ; 0000 00F3 int (*ptr[6])(void) = {IC_4000,IC_74914,IC_74832,IC_4001,IC_74804,IC_74874};
                 ; 0000 00F4 UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
000208 9768      	SBIW R28,24
000209 e188      	LDI  R24,24
                +
00020a e060     +LDI R22 , LOW ( 0 )
00020b e070     +LDI R23 , HIGH ( 0 )
                 	__GETWRN 22,23,0
00020c e6e6      	LDI  R30,LOW(_0x1ED*2)
00020d e0f0      	LDI  R31,HIGH(_0x1ED*2)
00020e d2e2      	RCALL __INITLOCB
                 ;	i -> R17
                 ;	flag -> R16
                 ;	ICs -> Y+12
                 ;	ptr -> Y+0
00020f e010      	LDI  R17,0
000210 e000      	LDI  R16,0
000211 e0e0      	LDI  R30,LOW(0)
000212 b9eb      	OUT  0xB,R30
                 ; 0000 00F5 UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000213 e0e8      	LDI  R30,LOW(8)
000214 b9ea      	OUT  0xA,R30
                 ; 0000 00F6 UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
000215 e8e6      	LDI  R30,LOW(134)
000216 bde0      	OUT  0x20,R30
                 ; 0000 00F7 UBRRH=0x00;
000217 e0e0      	LDI  R30,LOW(0)
000218 bde0      	OUT  0x20,R30
                 ; 0000 00F8 UBRRL=0x47;
000219 e4e7      	LDI  R30,LOW(71)
00021a b9e9      	OUT  0x9,R30
                 ; 0000 00F9 
                 ; 0000 00FA SET_BIT(DDRB,4);
00021b 9abc      	SBI  0x17,4
                 ; 0000 00FB SET_BIT(DDRB,5);
00021c 9abd      	SBI  0x17,5
                 ; 0000 00FC 
                 ; 0000 00FD PORTB.4=0;
00021d 98c4      	CBI  0x18,4
                 ; 0000 00FE PORTB.5=0;
00021e 98c5      	CBI  0x18,5
                 ; 0000 00FF CLR_BIT(DDRD,3);
00021f 988b      	CBI  0x11,3
                 ; 0000 0100 /*DDRA=0xFF;
                 ; 0000 0101 DDRB=0xFF;
                 ; 0000 0102 DDRC=0xFF;
                 ; 0000 0103 DDRD=0xFF; */
                 ; 0000 0104 
                 ; 0000 0105 while (1) {
                 _0x1F2:
                 ; 0000 0106 if(PIND.3==0){
000220 9983      	SBIC 0x10,3
000221 c02a      	RJMP _0x1F5
                 ; 0000 0107 flag=0;
000222 e000      	LDI  R16,LOW(0)
                 ; 0000 0108 for (i=0 ; i<6 ; i++){
000223 e010      	LDI  R17,LOW(0)
                 _0x1F7:
000224 3016      	CPI  R17,6
000225 f4d0      	BRSH _0x1F8
                 ; 0000 0109 if(ptr[i]()){
000226 2fe1      	MOV  R30,R17
000227 e0f0      	LDI  R31,0
000228 01de      	MOVW R26,R28
000229 d295      	RCALL SUBOPT_0x1A
00022a 9509      	ICALL
00022b 9730      	SBIW R30,0
00022c f089      	BREQ _0x1F9
                 ; 0000 010A flag=1;
00022d e001      	LDI  R16,LOW(1)
                 ; 0000 010B printf("IC %s has been recognized\r\n",ICs[i]);
                +
00022e eae0     +LDI R30 , LOW ( 2 * _0x0 + ( 34 ) )
00022f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 34 ) )
                 	__POINTW1FN _0x0,34
000230 93fa      	ST   -Y,R31
000231 93ea      	ST   -Y,R30
000232 2fe1      	MOV  R30,R17
000233 e0f0      	LDI  R31,0
000234 01de      	MOVW R26,R28
000235 961e      	ADIW R26,14
000236 d288      	RCALL SUBOPT_0x1A
000237 2766      	CLR  R22
000238 2777      	CLR  R23
000239 d2cb      	RCALL __PUTPARD1
00023a e084      	LDI  R24,4
00023b d14f      	RCALL _printf
00023c 9626      	ADIW R28,6
                 ; 0000 010C break;
00023d c002      	RJMP _0x1F8
                 ; 0000 010D }
                 ; 0000 010E }
                 _0x1F9:
00023e 5f1f      	SUBI R17,-1
00023f cfe4      	RJMP _0x1F7
                 _0x1F8:
                 ; 0000 010F delay_ms(200);
000240 eca8      	LDI  R26,LOW(200)
000241 e0b0      	LDI  R27,0
000242 d2c7      	RCALL _delay_ms
                 ; 0000 0110 if(flag==0){
000243 3000      	CPI  R16,0
000244 f439      	BRNE _0x1FA
                 ; 0000 0111 printf("NO IC\r\n");
                +
000245 ebec     +LDI R30 , LOW ( 2 * _0x0 + ( 62 ) )
000246 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 62 ) )
                 	__POINTW1FN _0x0,62
000247 93fa      	ST   -Y,R31
000248 93ea      	ST   -Y,R30
000249 e080      	LDI  R24,0
00024a d140      	RCALL _printf
00024b 9622      	ADIW R28,2
                 ; 0000 0112 }
                 ; 0000 0113 }
                 _0x1FA:
                 ; 0000 0114 }
                 _0x1F5:
00024c cfd3      	RJMP _0x1F2
                 ; 0000 0115 }
                 _0x1FB:
00024d cfff      	RJMP _0x1FB
                 ; .FEND
                 
                 	.DSEG
                 _0x1EC:
000260           	.BYTE 0x22
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
00024e 93aa      	ST   -Y,R26
                 putchar0:
00024f 9b5d           sbis usr,udre
000250 cffe           rjmp putchar0
000251 81e8           ld   r30,y
000252 b9ec           out  udr,r30
000253 9621      	ADIW R28,1
000254 9508      	RET
                 ; .FEND
                 _put_usart_G100:
                 ; .FSTART _put_usart_G100
000255 d28f      	RCALL __SAVELOCR4
000256 018d      	MOVW R16,R26
000257 813c      	LDD  R19,Y+4
000258 2fa3      	MOV  R26,R19
000259 dff4      	RCALL _putchar
00025a 01d8      	MOVW R26,R16
00025b 91ed      	LD   R30,X+
00025c 91fd      	LD   R31,X+
00025d 9631      	ADIW R30,1
00025e 93fe      	ST   -X,R31
00025f 93ee      	ST   -X,R30
000260 d28b      	RCALL __LOADLOCR4
000261 9625      	ADIW R28,5
000262 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000263 93ba      	ST   -Y,R27
000264 93aa      	ST   -Y,R26
000265 9726      	SBIW R28,6
000266 d27c      	RCALL __SAVELOCR6
000267 e010      	LDI  R17,0
000268 85ac      	LDD  R26,Y+12
000269 85bd      	LDD  R27,Y+12+1
00026a e0e0      	LDI  R30,LOW(0)
00026b e0f0      	LDI  R31,HIGH(0)
00026c 93ed      	ST   X+,R30
00026d 93fc      	ST   X,R31
                 _0x2000016:
00026e 89ea      	LDD  R30,Y+18
00026f 89fb      	LDD  R31,Y+18+1
000270 9631      	ADIW R30,1
000271 8bea      	STD  Y+18,R30
000272 8bfb      	STD  Y+18+1,R31
000273 9731      	SBIW R30,1
000274 91e4      	LPM  R30,Z
000275 2f2e      	MOV  R18,R30
000276 30e0      	CPI  R30,0
000277 f409      	BRNE PC+2
000278 c10b      	RJMP _0x2000018
000279 2fe1      	MOV  R30,R17
00027a 30e0      	CPI  R30,0
00027b f431      	BRNE _0x200001C
00027c 3225      	CPI  R18,37
00027d f411      	BRNE _0x200001D
00027e e011      	LDI  R17,LOW(1)
00027f c001      	RJMP _0x200001E
                 _0x200001D:
000280 d245      	RCALL SUBOPT_0x1B
                 _0x200001E:
000281 c101      	RJMP _0x200001B
                 _0x200001C:
000282 30e1      	CPI  R30,LOW(0x1)
000283 f4a1      	BRNE _0x200001F
000284 3225      	CPI  R18,37
000285 f411      	BRNE _0x2000020
000286 d23f      	RCALL SUBOPT_0x1B
000287 c0fa      	RJMP _0x20000CC
                 _0x2000020:
000288 e012      	LDI  R17,LOW(2)
000289 e040      	LDI  R20,LOW(0)
00028a e000      	LDI  R16,LOW(0)
00028b 322d      	CPI  R18,45
00028c f411      	BRNE _0x2000021
00028d e001      	LDI  R16,LOW(1)
00028e c0f4      	RJMP _0x200001B
                 _0x2000021:
00028f 322b      	CPI  R18,43
000290 f411      	BRNE _0x2000022
000291 e24b      	LDI  R20,LOW(43)
000292 c0f0      	RJMP _0x200001B
                 _0x2000022:
000293 3220      	CPI  R18,32
000294 f411      	BRNE _0x2000023
000295 e240      	LDI  R20,LOW(32)
000296 c0ec      	RJMP _0x200001B
                 _0x2000023:
000297 c002      	RJMP _0x2000024
                 _0x200001F:
000298 30e2      	CPI  R30,LOW(0x2)
000299 f439      	BRNE _0x2000025
                 _0x2000024:
00029a e050      	LDI  R21,LOW(0)
00029b e013      	LDI  R17,LOW(3)
00029c 3320      	CPI  R18,48
00029d f411      	BRNE _0x2000026
00029e 6800      	ORI  R16,LOW(128)
00029f c0e3      	RJMP _0x200001B
                 _0x2000026:
0002a0 c003      	RJMP _0x2000027
                 _0x2000025:
0002a1 30e3      	CPI  R30,LOW(0x3)
0002a2 f009      	BREQ PC+2
0002a3 c0df      	RJMP _0x200001B
                 _0x2000027:
0002a4 3320      	CPI  R18,48
0002a5 f010      	BRLO _0x200002A
0002a6 332a      	CPI  R18,58
0002a7 f008      	BRLO _0x200002B
                 _0x200002A:
0002a8 c007      	RJMP _0x2000029
                 _0x200002B:
0002a9 e0aa      	LDI  R26,LOW(10)
0002aa 9f5a      	MUL  R21,R26
0002ab 2d50      	MOV  R21,R0
0002ac 2fe2      	MOV  R30,R18
0002ad 53e0      	SUBI R30,LOW(48)
0002ae 0f5e      	ADD  R21,R30
0002af c0d3      	RJMP _0x200001B
                 _0x2000029:
0002b0 2fe2      	MOV  R30,R18
0002b1 36e3      	CPI  R30,LOW(0x63)
0002b2 f439      	BRNE _0x200002F
0002b3 d219      	RCALL SUBOPT_0x1C
0002b4 89e8      	LDD  R30,Y+16
0002b5 89f9      	LDD  R31,Y+16+1
0002b6 81a4      	LDD  R26,Z+4
0002b7 93aa      	ST   -Y,R26
0002b8 d21a      	RCALL SUBOPT_0x1D
0002b9 c0c8      	RJMP _0x2000030
                 _0x200002F:
0002ba 37e3      	CPI  R30,LOW(0x73)
0002bb f429      	BRNE _0x2000032
0002bc d210      	RCALL SUBOPT_0x1C
0002bd d21b      	RCALL SUBOPT_0x1E
0002be d0f3      	RCALL _strlen
0002bf 2f1e      	MOV  R17,R30
0002c0 c007      	RJMP _0x2000033
                 _0x2000032:
0002c1 37e0      	CPI  R30,LOW(0x70)
0002c2 f449      	BRNE _0x2000035
0002c3 d209      	RCALL SUBOPT_0x1C
0002c4 d214      	RCALL SUBOPT_0x1E
0002c5 d0f8      	RCALL _strlenf
0002c6 2f1e      	MOV  R17,R30
0002c7 6008      	ORI  R16,LOW(8)
                 _0x2000033:
0002c8 6002      	ORI  R16,LOW(2)
0002c9 770f      	ANDI R16,LOW(127)
0002ca e030      	LDI  R19,LOW(0)
0002cb c03a      	RJMP _0x2000036
                 _0x2000035:
0002cc 36e4      	CPI  R30,LOW(0x64)
0002cd f011      	BREQ _0x2000039
0002ce 36e9      	CPI  R30,LOW(0x69)
0002cf f411      	BRNE _0x200003A
                 _0x2000039:
0002d0 6004      	ORI  R16,LOW(4)
0002d1 c002      	RJMP _0x200003B
                 _0x200003A:
0002d2 37e5      	CPI  R30,LOW(0x75)
0002d3 f431      	BRNE _0x200003C
                 _0x200003B:
0002d4 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
0002d5 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
0002d6 83ee      	STD  Y+6,R30
0002d7 83ff      	STD  Y+6+1,R31
0002d8 e015      	LDI  R17,LOW(5)
0002d9 c00c      	RJMP _0x200003D
                 _0x200003C:
0002da 35e8      	CPI  R30,LOW(0x58)
0002db f411      	BRNE _0x200003F
0002dc 6008      	ORI  R16,LOW(8)
0002dd c003      	RJMP _0x2000040
                 _0x200003F:
0002de 37e8      	CPI  R30,LOW(0x78)
0002df f009      	BREQ PC+2
0002e0 c0a1      	RJMP _0x2000071
                 _0x2000040:
0002e1 e5ee      	LDI  R30,LOW(_tbl16_G100*2)
0002e2 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
0002e3 83ee      	STD  Y+6,R30
0002e4 83ff      	STD  Y+6+1,R31
0002e5 e014      	LDI  R17,LOW(4)
                 _0x200003D:
0002e6 ff02      	SBRS R16,2
0002e7 c015      	RJMP _0x2000042
0002e8 d1e4      	RCALL SUBOPT_0x1C
0002e9 89a8      	LDD  R26,Y+16
0002ea 89b9      	LDD  R27,Y+16+1
0002eb 9614      	ADIW R26,4
0002ec 91ed      	LD   R30,X+
0002ed 91fd      	LD   R31,X+
0002ee 87ea      	STD  Y+10,R30
0002ef 87fb      	STD  Y+10+1,R31
0002f0 85ab      	LDD  R26,Y+11
0002f1 23aa      	TST  R26
0002f2 f422      	BRPL _0x2000043
0002f3 d209      	RCALL __ANEGW1
0002f4 87ea      	STD  Y+10,R30
0002f5 87fb      	STD  Y+10+1,R31
0002f6 e24d      	LDI  R20,LOW(45)
                 _0x2000043:
0002f7 3040      	CPI  R20,0
0002f8 f011      	BREQ _0x2000044
0002f9 5f1f      	SUBI R17,-LOW(1)
0002fa c001      	RJMP _0x2000045
                 _0x2000044:
0002fb 7f0b      	ANDI R16,LOW(251)
                 _0x2000045:
0002fc c009      	RJMP _0x2000046
                 _0x2000042:
0002fd d1cf      	RCALL SUBOPT_0x1C
0002fe 89a8      	LDD  R26,Y+16
0002ff 89b9      	LDD  R27,Y+16+1
000300 9614      	ADIW R26,4
                +
000301 91ed     +LD R30 , X +
000302 91fc     +LD R31 , X
000303 9711     +SBIW R26 , 1
                 	__GETW1P
000304 87ea      	STD  Y+10,R30
000305 87fb      	STD  Y+10+1,R31
                 _0x2000046:
                 _0x2000036:
000306 fd00      	SBRC R16,0
000307 c010      	RJMP _0x2000047
                 _0x2000048:
000308 1715      	CP   R17,R21
000309 f470      	BRSH _0x200004A
00030a ff07      	SBRS R16,7
00030b c008      	RJMP _0x200004B
00030c ff02      	SBRS R16,2
00030d c004      	RJMP _0x200004C
00030e 7f0b      	ANDI R16,LOW(251)
00030f 2f24      	MOV  R18,R20
000310 5011      	SUBI R17,LOW(1)
000311 c001      	RJMP _0x200004D
                 _0x200004C:
000312 e320      	LDI  R18,LOW(48)
                 _0x200004D:
000313 c001      	RJMP _0x200004E
                 _0x200004B:
000314 e220      	LDI  R18,LOW(32)
                 _0x200004E:
000315 d1b0      	RCALL SUBOPT_0x1B
000316 5051      	SUBI R21,LOW(1)
000317 cff0      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
000318 2f31      	MOV  R19,R17
000319 ff01      	SBRS R16,1
00031a c016      	RJMP _0x200004F
                 _0x2000050:
00031b 3030      	CPI  R19,0
00031c f099      	BREQ _0x2000052
00031d ff03      	SBRS R16,3
00031e c006      	RJMP _0x2000053
00031f 81ee      	LDD  R30,Y+6
000320 81ff      	LDD  R31,Y+6+1
000321 9125      	LPM  R18,Z+
000322 83ee      	STD  Y+6,R30
000323 83ff      	STD  Y+6+1,R31
000324 c005      	RJMP _0x2000054
                 _0x2000053:
000325 81ae      	LDD  R26,Y+6
000326 81bf      	LDD  R27,Y+6+1
000327 912d      	LD   R18,X+
000328 83ae      	STD  Y+6,R26
000329 83bf      	STD  Y+6+1,R27
                 _0x2000054:
00032a d19b      	RCALL SUBOPT_0x1B
00032b 3050      	CPI  R21,0
00032c f009      	BREQ _0x2000055
00032d 5051      	SUBI R21,LOW(1)
                 _0x2000055:
00032e 5031      	SUBI R19,LOW(1)
00032f cfeb      	RJMP _0x2000050
                 _0x2000052:
000330 c048      	RJMP _0x2000056
                 _0x200004F:
                 _0x2000058:
000331 e320      	LDI  R18,LOW(48)
000332 81ee      	LDD  R30,Y+6
000333 81ff      	LDD  R31,Y+6+1
000334 d1cc      	RCALL __GETW1PF
000335 87e8      	STD  Y+8,R30
000336 87f9      	STD  Y+8+1,R31
000337 81ee      	LDD  R30,Y+6
000338 81ff      	LDD  R31,Y+6+1
000339 9632      	ADIW R30,2
00033a 83ee      	STD  Y+6,R30
00033b 83ff      	STD  Y+6+1,R31
                 _0x200005A:
00033c 85e8      	LDD  R30,Y+8
00033d 85f9      	LDD  R31,Y+8+1
00033e 85aa      	LDD  R26,Y+10
00033f 85bb      	LDD  R27,Y+10+1
000340 17ae      	CP   R26,R30
000341 07bf      	CPC  R27,R31
000342 f050      	BRLO _0x200005C
000343 5f2f      	SUBI R18,-LOW(1)
000344 85a8      	LDD  R26,Y+8
000345 85b9      	LDD  R27,Y+8+1
000346 85ea      	LDD  R30,Y+10
000347 85fb      	LDD  R31,Y+10+1
000348 1bea      	SUB  R30,R26
000349 0bfb      	SBC  R31,R27
00034a 87ea      	STD  Y+10,R30
00034b 87fb      	STD  Y+10+1,R31
00034c cfef      	RJMP _0x200005A
                 _0x200005C:
00034d 332a      	CPI  R18,58
00034e f028      	BRLO _0x200005D
00034f ff03      	SBRS R16,3
000350 c002      	RJMP _0x200005E
000351 5f29      	SUBI R18,-LOW(7)
000352 c001      	RJMP _0x200005F
                 _0x200005E:
000353 5d29      	SUBI R18,-LOW(39)
                 _0x200005F:
                 _0x200005D:
000354 fd04      	SBRC R16,4
000355 c019      	RJMP _0x2000061
000356 3321      	CPI  R18,49
000357 f420      	BRSH _0x2000063
000358 85a8      	LDD  R26,Y+8
000359 85b9      	LDD  R27,Y+8+1
00035a 9711      	SBIW R26,1
00035b f409      	BRNE _0x2000062
                 _0x2000063:
00035c c009      	RJMP _0x20000CD
                 _0x2000062:
00035d 1753      	CP   R21,R19
00035e f010      	BRLO _0x2000067
00035f ff00      	SBRS R16,0
000360 c001      	RJMP _0x2000068
                 _0x2000067:
000361 c011      	RJMP _0x2000066
                 _0x2000068:
000362 e220      	LDI  R18,LOW(32)
000363 ff07      	SBRS R16,7
000364 c00a      	RJMP _0x2000069
000365 e320      	LDI  R18,LOW(48)
                 _0x20000CD:
000366 6100      	ORI  R16,LOW(16)
000367 ff02      	SBRS R16,2
000368 c006      	RJMP _0x200006A
000369 7f0b      	ANDI R16,LOW(251)
00036a 934a      	ST   -Y,R20
00036b d167      	RCALL SUBOPT_0x1D
00036c 3050      	CPI  R21,0
00036d f009      	BREQ _0x200006B
00036e 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x200006A:
                 _0x2000069:
                 _0x2000061:
00036f d156      	RCALL SUBOPT_0x1B
000370 3050      	CPI  R21,0
000371 f009      	BREQ _0x200006C
000372 5051      	SUBI R21,LOW(1)
                 _0x200006C:
                 _0x2000066:
000373 5031      	SUBI R19,LOW(1)
000374 85a8      	LDD  R26,Y+8
000375 85b9      	LDD  R27,Y+8+1
000376 9712      	SBIW R26,2
000377 f008      	BRLO _0x2000059
000378 cfb8      	RJMP _0x2000058
                 _0x2000059:
                 _0x2000056:
000379 ff00      	SBRS R16,0
00037a c007      	RJMP _0x200006D
                 _0x200006E:
00037b 3050      	CPI  R21,0
00037c f029      	BREQ _0x2000070
00037d 5051      	SUBI R21,LOW(1)
00037e e2e0      	LDI  R30,LOW(32)
00037f 93ea      	ST   -Y,R30
000380 d152      	RCALL SUBOPT_0x1D
000381 cff9      	RJMP _0x200006E
                 _0x2000070:
                 _0x200006D:
                 _0x2000071:
                 _0x2000030:
                 _0x20000CC:
000382 e010      	LDI  R17,LOW(0)
                 _0x200001B:
000383 ceea      	RJMP _0x2000016
                 _0x2000018:
000384 85ac      	LDD  R26,Y+12
000385 85bd      	LDD  R27,Y+12+1
000386 91ed      	LD   R30,X+
000387 91fd      	LD   R31,X+
000388 d161      	RCALL __LOADLOCR6
000389 9664      	ADIW R28,20
00038a 9508      	RET
                 ; .FEND
                 _printf:
                 ; .FSTART _printf
00038b 92ff      	PUSH R15
00038c 2ef8      	MOV  R15,R24
00038d 9726      	SBIW R28,6
00038e 931a      	ST   -Y,R17
00038f 930a      	ST   -Y,R16
000390 01de      	MOVW R26,R28
000391 9614      	ADIW R26,4
                +
000392 2400     +CLR R0
000393 0daf     +ADD R26 , R15
000394 1db0     +ADC R27 , R0
                 	__ADDW2R15
000395 018d      	MOVW R16,R26
000396 e0e0      	LDI  R30,LOW(0)
000397 83ec      	STD  Y+4,R30
000398 83ed      	STD  Y+4+1,R30
000399 83ee      	STD  Y+6,R30
00039a 83ef      	STD  Y+6+1,R30
00039b 01de      	MOVW R26,R28
00039c 9618      	ADIW R26,8
                +
00039d 2400     +CLR R0
00039e 0daf     +ADD R26 , R15
00039f 1db0     +ADC R27 , R0
                 	__ADDW2R15
0003a0 91ed      	LD   R30,X+
0003a1 91fd      	LD   R31,X+
0003a2 93fa      	ST   -Y,R31
0003a3 93ea      	ST   -Y,R30
0003a4 931a      	ST   -Y,R17
0003a5 930a      	ST   -Y,R16
0003a6 e5e5      	LDI  R30,LOW(_put_usart_G100)
0003a7 e0f2      	LDI  R31,HIGH(_put_usart_G100)
0003a8 93fa      	ST   -Y,R31
0003a9 93ea      	ST   -Y,R30
0003aa 01de      	MOVW R26,R28
0003ab 9618      	ADIW R26,8
0003ac deb6      	RCALL __print_G100
0003ad 8119      	LDD  R17,Y+1
0003ae 8108      	LDD  R16,Y+0
0003af 9628      	ADIW R28,8
0003b0 90ff      	POP  R15
0003b1 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0003b2 93ba      	ST   -Y,R27
0003b3 93aa      	ST   -Y,R26
0003b4 91a9          ld   r26,y+
0003b5 91b9          ld   r27,y+
0003b6 27ee          clr  r30
0003b7 27ff          clr  r31
                 strlen0:
0003b8 916d          ld   r22,x+
0003b9 2366          tst  r22
0003ba f011          breq strlen1
0003bb 9631          adiw r30,1
0003bc cffb          rjmp strlen0
                 strlen1:
0003bd 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0003be 93ba      	ST   -Y,R27
0003bf 93aa      	ST   -Y,R26
0003c0 27aa          clr  r26
0003c1 27bb          clr  r27
0003c2 91e9          ld   r30,y+
0003c3 91f9          ld   r31,y+
                 strlenf0:
0003c4 9005      	lpm  r0,z+
0003c5 2000          tst  r0
0003c6 f011          breq strlenf1
0003c7 9611          adiw r26,1
0003c8 cffb          rjmp strlenf0
                 strlenf1:
0003c9 01fd          movw r30,r26
0003ca 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x0:
0003cb e0aa      	LDI  R26,LOW(10)
0003cc e0b0      	LDI  R27,0
0003cd d13c      	RCALL _delay_ms
0003ce e0a0      	LDI  R26,0
0003cf 99ce      	SBIC 0x19,6
0003d0 e0a1      	LDI  R26,1
0003d1 e0e0      	LDI  R30,0
0003d2 9984      	SBIC 0x10,4
0003d3 e0e1      	LDI  R30,1
0003d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x1:
0003d5 23ea      	AND  R30,R26
0003d6 2fae      	MOV  R26,R30
0003d7 e0e0      	LDI  R30,0
0003d8 9986      	SBIC 0x10,6
0003d9 e0e1      	LDI  R30,1
0003da 23ea      	AND  R30,R26
0003db 2fae      	MOV  R26,R30
0003dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2:
0003dd e0e0      	LDI  R30,0
0003de 99b1      	SBIC 0x16,1
0003df e0e1      	LDI  R30,1
0003e0 23ea      	AND  R30,R26
0003e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3:
0003e2 2fae      	MOV  R26,R30
0003e3 e0e0      	LDI  R30,0
0003e4 99b3      	SBIC 0x16,3
0003e5 e0e1      	LDI  R30,1
0003e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4:
0003e7 2e0e      	MOV  R0,R30
0003e8 e0a0      	LDI  R26,0
0003e9 999f      	SBIC 0x13,7
0003ea e0a1      	LDI  R26,1
0003eb e0e0      	LDI  R30,LOW(0)
0003ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x5:
                +
0003ed 17ea     +CP R30 , R26
0003ee e0e1     +LDI R30 , 1
0003ef f009     +BREQ PC + 2
0003f0 27ee     +CLR R30
                 	__EQB12
0003f1 21e0      	AND  R30,R0
0003f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x6:
0003f3 2bea      	OR   R30,R26
0003f4 2fae      	MOV  R26,R30
0003f5 e0e0      	LDI  R30,0
0003f6 9986      	SBIC 0x10,6
0003f7 e0e1      	LDI  R30,1
0003f8 2bea      	OR   R30,R26
0003f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x7:
0003fa 2fae      	MOV  R26,R30
0003fb e0e0      	LDI  R30,0
0003fc 99b1      	SBIC 0x16,1
0003fd e0e1      	LDI  R30,1
0003fe 2bea      	OR   R30,R26
0003ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x8:
                +
000400 17ea     +CP R30 , R26
000401 e0e1     +LDI R30 , 1
000402 f409     +BRNE PC + 2
000403 27ee     +CLR R30
                 	__NEB12
000404 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000405 bbe1      	OUT  0x11,R30
000406 988b      	CBI  0x11,3
000407 9aad      	SBI  0x15,5
000408 9897      	CBI  0x12,7
000409 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xA:
00040a 98af      	CBI  0x15,7
00040b e0a0      	LDI  R26,0
00040c 99cf      	SBIC 0x19,7
00040d e0a1      	LDI  R26,1
00040e e0e0      	LDI  R30,0
00040f 9984      	SBIC 0x10,4
000410 e0e1      	LDI  R30,1
000411 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xB:
000412 2e0e      	MOV  R0,R30
000413 e0a0      	LDI  R26,0
000414 99b0      	SBIC 0x16,0
000415 e0a1      	LDI  R26,1
000416 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0xC:
000417 9aaf      	SBI  0x15,7
000418 e0a0      	LDI  R26,0
000419 99cf      	SBIC 0x19,7
00041a e0a1      	LDI  R26,1
00041b e0e0      	LDI  R30,0
00041c 9984      	SBIC 0x10,4
00041d e0e1      	LDI  R30,1
00041e 2bea      	OR   R30,R26
00041f cfda      	RJMP SUBOPT_0x7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0xD:
000420 e0e1      	LDI  R30,LOW(1)
                +
000421 17ea     +CP R30 , R26
000422 e0e1     +LDI R30 , 1
000423 f009     +BREQ PC + 2
000424 27ee     +CLR R30
                 	__EQB12
000425 29e0      	OR   R30,R0
000426 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xE:
000427 e6ef      	LDI  R30,LOW(111)
000428 bbea      	OUT  0x1A,R30
000429 efe6      	LDI  R30,LOW(246)
00042a bbe7      	OUT  0x17,R30
00042b edef      	LDI  R30,LOW(223)
00042c bbe4      	OUT  0x14,R30
00042d ebef      	LDI  R30,LOW(191)
00042e bbe1      	OUT  0x11,R30
00042f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xF:
000430 9aab      	SBI  0x15,3
000431 9aae      	SBI  0x15,6
000432 9ac1      	SBI  0x18,1
000433 9a94      	SBI  0x12,4
000434 9add      	SBI  0x1B,5
000435 9ada      	SBI  0x1B,2
000436 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x10:
000437 9aac      	SBI  0x15,4
000438 9aaf      	SBI  0x15,7
000439 9ac2      	SBI  0x18,2
00043a 9a95      	SBI  0x12,5
00043b 9ade      	SBI  0x1B,6
00043c 9adb      	SBI  0x1B,3
00043d e0a0      	LDI  R26,0
00043e 99cc      	SBIC 0x19,4
00043f e0a1      	LDI  R26,1
000440 e0e0      	LDI  R30,0
000441 99cf      	SBIC 0x19,7
000442 e0e1      	LDI  R30,1
000443 cf91      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:73 WORDS
                 SUBOPT_0x11:
000444 e0e0      	LDI  R30,0
000445 99b3      	SBIC 0x16,3
000446 e0e1      	LDI  R30,1
000447 23ea      	AND  R30,R26
000448 2fae      	MOV  R26,R30
000449 e0e0      	LDI  R30,0
00044a 99b0      	SBIC 0x16,0
00044b e0e1      	LDI  R30,1
00044c 23ea      	AND  R30,R26
00044d 2e0e      	MOV  R0,R30
00044e e0a0      	LDI  R26,0
00044f 999d      	SBIC 0x13,5
000450 e0a1      	LDI  R26,1
000451 e0e1      	LDI  R30,LOW(1)
000452 dfad      	RCALL SUBOPT_0x8
000453 21e0      	AND  R30,R0
000454 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x12:
000455 98ab      	CBI  0x15,3
000456 98ae      	CBI  0x15,6
000457 98c1      	CBI  0x18,1
000458 9894      	CBI  0x12,4
000459 98dd      	CBI  0x1B,5
00045a 98da      	CBI  0x1B,2
00045b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x13:
00045c 98ac      	CBI  0x15,4
00045d 98af      	CBI  0x15,7
00045e 98c2      	CBI  0x18,2
00045f 9895      	CBI  0x12,5
000460 98de      	CBI  0x1B,6
000461 98db      	CBI  0x1B,3
000462 e0a0      	LDI  R26,0
000463 99cc      	SBIC 0x19,4
000464 e0a1      	LDI  R26,1
000465 e0e0      	LDI  R30,0
000466 99cf      	SBIC 0x19,7
000467 e0e1      	LDI  R30,1
000468 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x14:
000469 2bea      	OR   R30,R26
00046a 2fae      	MOV  R26,R30
00046b e0e0      	LDI  R30,0
00046c 99b0      	SBIC 0x16,0
00046d e0e1      	LDI  R30,1
00046e 2bea      	OR   R30,R26
00046f 2e0e      	MOV  R0,R30
000470 e0a0      	LDI  R26,0
000471 999d      	SBIC 0x13,5
000472 e0a1      	LDI  R26,1
000473 cfac      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x15:
000474 2e0e      	MOV  R0,R30
000475 e0a0      	LDI  R26,0
000476 99b2      	SBIC 0x16,2
000477 e0a1      	LDI  R26,1
000478 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x16:
000479 98af      	CBI  0x15,7
00047a 9ac0      	SBI  0x18,0
00047b 9ac3      	SBI  0x18,3
00047c e0a0      	LDI  R26,0
00047d 9986      	SBIC 0x10,6
00047e e0a1      	LDI  R26,1
00047f e0e0      	LDI  R30,0
000480 99b1      	SBIC 0x16,1
000481 e0e1      	LDI  R30,1
000482 2bea      	OR   R30,R26
000483 cff0      	RJMP SUBOPT_0x15
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x17:
000484 9aaf      	SBI  0x15,7
000485 98c0      	CBI  0x18,0
000486 9ac3      	SBI  0x18,3
000487 e0a0      	LDI  R26,0
000488 9986      	SBIC 0x10,6
000489 e0a1      	LDI  R26,1
00048a e0e0      	LDI  R30,0
00048b 99b1      	SBIC 0x16,1
00048c e0e1      	LDI  R30,1
00048d 2bea      	OR   R30,R26
00048e cfe5      	RJMP SUBOPT_0x15
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x18:
00048f 9aaf      	SBI  0x15,7
000490 9ac0      	SBI  0x18,0
000491 9ac3      	SBI  0x18,3
000492 e0a0      	LDI  R26,0
000493 9986      	SBIC 0x10,6
000494 e0a1      	LDI  R26,1
000495 e0e0      	LDI  R30,0
000496 99b1      	SBIC 0x16,1
000497 e0e1      	LDI  R30,1
000498 2bea      	OR   R30,R26
000499 cfda      	RJMP SUBOPT_0x15
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x19:
00049a e0a0      	LDI  R26,0
00049b 999a      	SBIC 0x13,2
00049c e0a1      	LDI  R26,1
00049d e0e0      	LDI  R30,0
00049e 999b      	SBIC 0x13,3
00049f e0e1      	LDI  R30,1
0004a0 2bea      	OR   R30,R26
0004a1 2fae      	MOV  R26,R30
0004a2 e0e0      	LDI  R30,0
0004a3 999c      	SBIC 0x13,4
0004a4 e0e1      	LDI  R30,1
0004a5 2bea      	OR   R30,R26
0004a6 2fae      	MOV  R26,R30
0004a7 e0e0      	LDI  R30,0
0004a8 999d      	SBIC 0x13,5
0004a9 e0e1      	LDI  R30,1
0004aa 2bea      	OR   R30,R26
0004ab 2fae      	MOV  R26,R30
0004ac e0e0      	LDI  R30,0
0004ad 999e      	SBIC 0x13,6
0004ae e0e1      	LDI  R30,1
0004af 2bea      	OR   R30,R26
0004b0 2fae      	MOV  R26,R30
0004b1 e0e0      	LDI  R30,0
0004b2 999f      	SBIC 0x13,7
0004b3 e0e1      	LDI  R30,1
0004b4 2bea      	OR   R30,R26
0004b5 2fae      	MOV  R26,R30
0004b6 e0e0      	LDI  R30,0
0004b7 99b0      	SBIC 0x16,0
0004b8 e0e1      	LDI  R30,1
0004b9 2bea      	OR   R30,R26
0004ba 2e0e      	MOV  R0,R30
0004bb e0a0      	LDI  R26,0
0004bc 99b1      	SBIC 0x16,1
0004bd e0a1      	LDI  R26,1
0004be cf61      	RJMP SUBOPT_0xD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
0004bf 0fee      	LSL  R30
0004c0 1fff      	ROL  R31
0004c1 0fae      	ADD  R26,R30
0004c2 1fbf      	ADC  R27,R31
0004c3 91ed      	LD   R30,X+
0004c4 91fd      	LD   R31,X+
0004c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x1B:
0004c6 932a      	ST   -Y,R18
0004c7 85ad      	LDD  R26,Y+13
0004c8 85be      	LDD  R27,Y+13+1
0004c9 85ef      	LDD  R30,Y+15
0004ca 89f8      	LDD  R31,Y+15+1
0004cb 9509      	ICALL
0004cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x1C:
0004cd 89e8      	LDD  R30,Y+16
0004ce 89f9      	LDD  R31,Y+16+1
0004cf 9734      	SBIW R30,4
0004d0 8be8      	STD  Y+16,R30
0004d1 8bf9      	STD  Y+16+1,R31
0004d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1D:
0004d3 85ad      	LDD  R26,Y+13
0004d4 85be      	LDD  R27,Y+13+1
0004d5 85ef      	LDD  R30,Y+15
0004d6 89f8      	LDD  R31,Y+15+1
0004d7 9509      	ICALL
0004d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1E:
0004d9 89a8      	LDD  R26,Y+16
0004da 89b9      	LDD  R27,Y+16+1
0004db 9614      	ADIW R26,4
0004dc 91ed      	LD   R30,X+
0004dd 91fd      	LD   R31,X+
0004de 83ee      	STD  Y+6,R30
0004df 83ff      	STD  Y+6+1,R31
0004e0 81ae      	LDD  R26,Y+6
0004e1 81bf      	LDD  R27,Y+6+1
0004e2 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0004e3 935a      	ST   -Y,R21
                 __SAVELOCR5:
0004e4 934a      	ST   -Y,R20
                 __SAVELOCR4:
0004e5 933a      	ST   -Y,R19
                 __SAVELOCR3:
0004e6 932a      	ST   -Y,R18
                 __SAVELOCR2:
0004e7 931a      	ST   -Y,R17
0004e8 930a      	ST   -Y,R16
0004e9 9508      	RET
                 
                 __LOADLOCR6:
0004ea 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0004eb 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0004ec 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0004ed 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0004ee 8119      	LDD  R17,Y+1
0004ef 8108      	LD   R16,Y
0004f0 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
0004f1 93af      	PUSH R26
0004f2 93bf      	PUSH R27
0004f3 01db      	MOVW R26,R22
0004f4 0fac      	ADD  R26,R28
0004f5 1fbd      	ADC  R27,R29
                 __INITLOC0:
0004f6 9005      	LPM  R0,Z+
0004f7 920d      	ST   X+,R0
0004f8 958a      	DEC  R24
0004f9 f7e1      	BRNE __INITLOC0
0004fa 91bf      	POP  R27
0004fb 91af      	POP  R26
0004fc 9508      	RET
                 
                 __ANEGW1:
0004fd 95f1      	NEG  R31
0004fe 95e1      	NEG  R30
0004ff 40f0      	SBCI R31,0
000500 9508      	RET
                 
                 __GETW1PF:
000501 9005      	LPM  R0,Z+
000502 91f4      	LPM  R31,Z
000503 2de0      	MOV  R30,R0
000504 9508      	RET
                 
                 __PUTPARD1:
000505 937a      	ST   -Y,R23
000506 936a      	ST   -Y,R22
000507 93fa      	ST   -Y,R31
000508 93ea      	ST   -Y,R30
000509 9508      	RET
                 
                 _delay_ms:
00050a 9610      	adiw r26,0
00050b f039      	breq __delay_ms1
                 __delay_ms0:
00050c 95a8      	wdr
                +
00050d ed80     +LDI R24 , LOW ( 0x7D0 )
00050e e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00050f 9701     +SBIW R24 , 1
000510 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000511 9711      	sbiw r26,1
000512 f7c9      	brne __delay_ms0
                 __delay_ms1:
000513 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :  26 r1 :   1 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  36 r17:  25 r18:  27 r19:  10 r20:   9 r21:  17 r22:   8 r23:   3 
r24:  14 r25:   3 r26: 158 r27:  34 r28:  16 r29:   2 r30: 292 r31:  59 
x  :  24 y  : 124 z  :  14 
Registers used: 22 out of 35 (62.9%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   4 add   :   5 
adiw  :  19 and   :  15 andi  :   4 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  39 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   6 
brlt  :   0 brmi  :   0 brne  :  27 brpl  :   1 brsh  :   3 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :  81 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  13 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   6 cpc   :   1 cpi   :  31 cpse  :   0 dec   :   2 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  22 ld    :  22 ldd   :  56 ldi   : 211 
lds   :   0 lpm   :  15 lsl   :   1 lsr   :   0 mov   :  39 movw  :  13 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :  20 
ori   :   6 out   :  31 pop   :   3 push  :   3 rcall : 117 ret   :  39 
reti  :   0 rjmp  :  90 rol   :   1 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :  82 sbic  :  51 sbis  :   1 sbiw  :  14 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  41 std   :  30 sts   :   0 sub   :   1 subi  :  14 swap  :   0 
tst   :   3 wdr   :   1 
Instructions used: 51 out of 116 (44.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000a28   2450    150   2600   32768   7.9%
[.dseg] 0x000060 0x000282      0     34     34    2048   1.7%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 0 warnings
